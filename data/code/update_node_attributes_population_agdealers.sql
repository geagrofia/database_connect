-- example: select COVERAGE.UPDATE_NODE_ATTRIBUTES()

-- THE POPULATION POINTS (POPULATION COUNT) AND NON-CNFA DEALERS (ID) ATTRIBUTES NEED TO BE ADDED TO THE NODES TABLE

CREATE OR REPLACE FUNCTION COVERAGE.UPDATE_NODE_ATTRIBUTES()
RETURNS INTEGER AS
$$ -- dollar quotes

-- notify
RAISE NOTICE 'UPDATE_NODE_ATTRIBUTES: begun.';

--create a spatial index for each table I will use

DROP INDEX IF EXISTS gist_vertices_geom;
CREATE INDEX IF NOT EXISTS gist_vertices_geom ON COVERAGE.FRICTION_B_LINES_COMBINED_NO_DUPES_NODED_VERTICES_PGR USING GIST (the_geom);

DROP INDEX IF EXISTS gist_edges_geom;
CREATE INDEX IF NOT EXISTS gist_edges_geom ON COVERAGE.FRICTION_B_LINES_COMBINED_NO_DUPES_NODED USING GIST (geom);

DROP INDEX IF EXISTS gist_popb_geom;
CREATE INDEX IF NOT EXISTS gist_popb_geom ON COVERAGE.REMAINING_POP_B_POINTS USING GIST (geometry);

DROP INDEX IF EXISTS gist_potag_geom;
CREATE INDEX IF NOT EXISTS gist_potag_geom ON COVERAGE.POT_AG_DEALERS_SNAP USING GIST (moved_geom);

--add a population count column to the node table

ALTER TABLE COVERAGE.FRICTION_B_LINES_COMBINED_NO_DUPES_NODED_VERTICES_PGR ADD COLUMN pop_b numeric(10,2);

UPDATE COVERAGE.FRICTION_B_LINES_COMBINED_NO_DUPES_NODED_VERTICES_PGR 
SET pop_b = POP.layer 
FROM COVERAGE.REMAINING_POP_B_POINTS POP
WHERE ST_DWithin(ST_TRANSFORM(COVERAGE.FRICTION_B_LINES_COMBINED_NO_DUPES_NODED_VERTICES_PGR.the_geom, 32736) , POP.geometry, 0.00001);

--add an agro-dealer id to the column table

ALTER TABLE COVERAGE.FRICTION_B_LINES_COMBINED_NO_DUPES_NODED_VERTICES_PGR ADD COLUMN ag_new_id BIGINT;

UPDATE COVERAGE.FRICTION_B_LINES_COMBINED_NO_DUPES_NODED_VERTICES_PGR 
SET ag_new_id = AG.pot_ag_dealer_id 
FROM COVERAGE.POT_AG_DEALERS_SNAP AG
WHERE ST_DWithin(ST_TRANSFORM(COVERAGE.FRICTION_B_LINES_COMBINED_NO_DUPES_NODED_VERTICES_PGR.the_geom, 32736) , ST_TRANSFORM(AG.moved_geom, 32736), 0.00001);


--for each node get the nearest population count value

--for each node get the nearest agro-dealer id

	
-- notify
RAISE NOTICE 'UPDATE_NODE_ATTRIBUTES: completed successfully.';
RETURN 0;

END;
$$
LANGUAGE plpgsql;